name: 'DOCKER NODE BUILD AND PUBLISH'
description: 'Builds and publishes a docker image for a NODEJS project'
inputs:
  username:
    description: 'Docker Hub Username'
    required: true
  password:
    description: 'Docker Hub Password'
    required: true
  name:
    description: 'Product Name'
    required: true
  production:
    description: 'Is this a production build?'
    type: boolean
    required: true
    default: true
  aws_key_id:
    description: 'AWS Key ID'
    required: true
  aws_key:
    description: 'AWS Key'
    required: true
  aws_bucket:
    description: 'AWS Bucket'
    required: true
runs:
  using: "composite"
  steps:
  - name: GET VERSION
    id: package-version
    uses: martinbeentjes/npm-get-version-action@master
  - name: Copy From S3
    uses: prewk/s3-cp-action@v2
    with:
      aws_access_key_id: ${{ inputs.aws_key_id }}
      aws_secret_access_key: ${{ inputs.aws_key }}
      source: s3://${{ inputs.aws_bucket }}/staging/${{ steps.package-version.outputs.current-version }}.zip
      dest: ./
  - name: Show Folder Contents After Download
    run: ls
    shell: bash
  - name: Extract some files
    run: 7z x ${{ steps.package-version.outputs.current-version }}.zip
    shell: bash
  - name: Show Folder Contents After Extract
    run: ls
    shell: bash
  - name: Checkout
    uses: actions/checkout@main
    with:
      repository: 'judahh/dockerBuildAndPublish'
      path: docker
  - name: Show Folder Contents
    run: ls
    shell: bash
  - name: Show Docker Folder Contents
    run: ls docker
    shell: bash
  - id: serviceName
    uses: ASzc/change-string-case-action@v2
    with:
      string: ${{ inputs.name }}
  - name: Login to Docker Hub
    uses: docker/login-action@master
    with:
      username: ${{ inputs.username }}
      password: ${{ inputs.password }}

  - name: Set up Docker Buildx
    id: buildx
    uses: docker/setup-buildx-action@v1

  - name: Build and push PRODUCT
    id: docker_build_product
    uses: docker/build-push-action@v2
    with:
      context: ./
      file: docker/Dockerfile
      push: true
      tags: ${{ inputs.username }}/${{ inputs.name }}${{ inputs.production && '' || '-s'}}:latest
      build-args: |
        SERVICE_NAME=${{ steps.serviceName.outputs.uppercase }}
        PROJECT_ENV=${{ inputs.production && 'production' || 'staging' }}


