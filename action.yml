name: 'DOCKER NODE BUILD AND PUBLISH'
description: 'Builds and publishes a docker image for a NODEJS project'
inputs:
  username:
    description: 'Docker Hub Username'
    required: true
  password:
    description: 'Docker Hub Password'
    required: true
  name:
    description: 'Product Name'
    required: true
  production:
    description: 'Is this a production build?'
    required: true
    default: 'true'
  platforms:
    description: 'Platforms to build for'
    required: true
    default: 'linux/amd64'
  node_version:
    description: 'Node Version'
    required: true
    default: '16.5.0-alpine'
runs:
  using: "composite"
  steps:
  - name: Show Folder Contents
    run: ls
    shell: bash
  - name: Checkout
    uses: actions/checkout@main
    with:
      repository: 'judahh/dockerBuildAndPublish'
      path: docker
  - name: Show Folder Contents
    run: ls
    shell: bash
  - name: Show Docker Folder Contents
    run: ls docker
    shell: bash
  - id: serviceName
    uses: ASzc/change-string-case-action@v2
    with:
      string: ${{ inputs.name }}
  - name: 'Set Production:'
    run: echo "PROD=$(${{ inputs.production == 'true' }} && echo '' || echo '-s')" >> $GITHUB_ENV
    shell: bash
  - name: 'Set Production2:'
    run: echo "PROD2=$(${{ inputs.production == 'true' }} && echo 'production' || echo 'staging')" >> $GITHUB_ENV
    shell: bash

  - name: Login to Docker Hub
    uses: docker/login-action@master
    with:
      username: ${{ inputs.username }}
      password: ${{ inputs.password }}

  - name: Set up QEMU
    id: qemu
    uses: docker/setup-qemu-action@v1
    with:
      platforms: ${{ inputs.platforms }}

  - name: Set up Docker Buildx
    id: buildx
    uses: docker/setup-buildx-action@v1

  - name: Build and push PRODUCT
    id: docker_build_product
    uses: docker/build-push-action@v2
    with:
      platforms: ${{ inputs.platforms }}
      context: ./
      file: docker/Dockerfile
      push: true
      tags: ${{ inputs.username }}/${{ inputs.name }}${{ env.PROD }}:latest
      build-args: |
        SERVICE_NAME=${{ steps.serviceName.outputs.uppercase }}
        PROJECT_ENV=${{ env.PROD2 }}
        NODE_VERSION=${{ inputs.node_version }}


